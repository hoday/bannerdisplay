<?php

namespace Hoday\Banners;

/**
 * Provides a user interface to manage banners
 * @package BannerManager
 */
class BannerManagerDb {

	protected $pdo;

	public function __construct($pdo) {
		$this->pdo = $pdo;
	}

	/**
	 * Registers a banner using a unique name (used to identify the banner) and path of the graphic
	 * @param  String $bannerName Name of the banner
	 * @param  String $bannerPath Path to the banner graphic
	 */
	public function registerBanner($bannerName, $bannerPath) {
		$sql = 'INSERT INTO banners(banner_name, banner_path) VALUES(:banner_name, :banner_path)';
    $stmt = $this->pdo->prepare($sql);

    $stmt->bindValue(':banner_name', $bannerName);
		$stmt->bindValue(':banner_path', $bannerPath);
    $stmt->execute();
		return $this->pdo->lastInsertId();
	}

	/**
	 * Deletes a registered banner
	 * @param  String $bannerName Name of the banner
	 */
	public function deleteBanner($bannerName) {
		$sql = 'DELETE FROM banners '
            . 'WHERE banner_name = :banner_name';
    $stmt = $this->pdo->prepare($sql);
    $stmt->bindValue(':banner_name', $bannerName);
    $stmt->execute();
    return $stmt->rowCount();
	}

	/**
	 * Gets the path of the graphic for the banner
	 * @param  String $bannerName Name of the banner
	 * @return  String             Path to the banner graphic
	 */
	public function getBannerPath($bannerName) {
		$sql = 'SELECT banner_path from banners WHERE banner_name = :bannerName';
		$stmt = $this->pdo->prepare($sql);
		$stmt->bindValue(':banner_name', $bannerName);
		$stmt->execute();

		$bannerPaths = [];
		while ($row = $stmt->fetch(\PDO::FETCH_ASSOC)) {
				$bannerPaths[] = [
						'banner_name' => $row['banner_name'],
						'banner_path' => $row['banner_path']
				];
		}
		return $bannerPaths;
	}

	/**
	 * Sets the path of the graphic for the banner
	 * @param  String $bannerName Name of the banner
	 * @param  String $bannerPath Path to the banner graphic
	 */
	public function setBannerPath($bannerName, $bannerPath) {
		$sql = "UPDATE banners "
	          . "SET banner_path = :banner_path "
	          . "WHERE banner_name = :banner_name";

	  $stmt = $this->pdo->prepare($sql);

	  $stmt->bindValue(':banner_path', $bannerPath);
	  $stmt->bindValue(':banner_name', $bannerName);

	  return $stmt->execute();

	}

	/**
	 * Prints the html for the banner of the specified name
	 * @param  String $bannerName Name of the banner
	 */
	public function printBanner($bannerName) {

		$bannerDisplayController = new BannerDisplayController();

		$sql = 'SELECT banner_id, start_date, end_date from banners WHERE banner_name = :banner_name';
		$stmt = $this->pdo->prepare($sql);
		$stmt->bindValue(':banner_name', $bannerName);
		$stmt->execute();
		$row = $stmt->fetch(\PDO::FETCH_ASSOC);
		$startDate = $row['start_date'];
		$endDate = $row['end_date'];
		$bannerId = $row['banner_id'];

		$bannerDisplayController->setBannerStartDate($startDate);
		$bannerDisplayController->setBannerEndDate($endDate);


		$sql = 'SELECT ip_id from banner_allowed_ips WHERE banner_id = :banner_id';
		$stmt = $this->pdo->prepare($sql);
		$stmt->bindValue(':banner_id', $bannerId);
		$stmt->execute();

		$ipIds = [];
		while ($row = $stmt->fetch(\PDO::FETCH_ASSOC)) {
			$ipId = $row['ip_id'];
			$ipIds[] = $ipId;

			$sql = 'SELECT ip from allowed_ips WHERE ip_id = :ip_id';
			$stmt = $this->pdo->prepare($sql);
			$stmt->bindValue(':ip_id', $ipId);
			$stmt->execute();
			$row = $stmt->fetch(\PDO::FETCH_ASSOC);
			$ip = $row['ip'];

			$bannerDisplayController->registerAllowedIp($ip);
		}

		if ($bannerDisplayController->isShowing()) {

			$sql = 'SELECT banner_path from banners WHERE banner_name = :banner_name';
			$stmt = $this->pdo->prepare($sql);
			$stmt->bindValue(':banner_name', $bannerName);
			$stmt->execute();
			$row = $stmt->fetch(\PDO::FETCH_ASSOC);
			$bannerPath = $row['banner_path'];

			(new Banner($bannerPath))->printBanner();

		}

	}

	public function getAllBanners() {
		$sql = 'SELECT banner_name, banner_path, start_date, end_date from banners';
		$stmt = $this->pdo->prepare($sql);
		$stmt->execute();

		$banners = [];
		while ($row = $stmt->fetch(\PDO::FETCH_ASSOC)) {
				$banners[] = [
						'banner_name' => $row['banner_name'],
						'banner_path' => $row['banner_path'],
						'start_date' => $row['start_date'],
						'end_date' => $row['end_date']

				];
		}
		return $banners;
	}

	public function printAllBanners() {
		 $bannerInfos = $this->getAllBanners();
		 ?>
		 <table class="table table-striped">
			 <thead>
				 <tr>
					 <th scope="col">Name</th>
					 <th scope="col">Graphic</th>
					 <th scope="col">Start date</th>
					 <th scope="col">End date</th>
					 <th scope="col">Allowed IPs</th>
				 </tr>
			 </thead>
			 <tbody>
		<?php
		 forEach ($bannerInfos as $bannerInfo) {
			 $banner = new \Hoday\Banners\Banner($bannerInfo['banner_path']);
			 ob_start();
			 include('templates/banners_template.php');
			 echo ob_get_clean();
			 //$bannerDisplayControllerView = new BannerDisplayControllerView($banner);
			 //$bannerDisplayControllerView->print();
		 }
		 ?>
	 			</tbody>
		 </table>
		 <?php

	}

	/**
	 * Sets a start date and end date between which the banner of the specified name should be visible
	 * @param String $bannerName Name of the banner
	 * @param String $startDate Start date of the period
	 * @param String $endDate   End date of the period
	 */
	public function setBannerPeriod($bannerName, $startDate, $endDate) {
		$sql = "UPDATE banners "
	          . "SET end_date = :end_date, "
						.   "start_date = :start_date "
	          . "WHERE banner_name = :banner_name";

	  $stmt = $this->pdo->prepare($sql);

		$stmt->bindValue(':start_date', $startDate);
	  $stmt->bindValue(':end_date', $endDate);
	  $stmt->bindValue(':banner_name', $bannerName);

	  return $stmt->execute();
	}

	public function setBannerStartDate($bannerName, $startDate) {
		$sql = "UPDATE banners "
	          . "SET start_date = :start_date "
	          . "WHERE banner_name = :banner_name";

	  $stmt = $this->pdo->prepare($sql);

	  $stmt->bindValue(':start_date', $startDate);
	  $stmt->bindValue(':banner_name', $bannerName);

	  return $stmt->execute();
	}

	public function setBannerEndDate($bannerName, $endDate) {
		$sql = "UPDATE banners "
	          . "SET end_date = :end_date "
	          . "WHERE banner_name = :banner_name";

	  $stmt = $this->pdo->prepare($sql);

	  $stmt->bindValue(':end_date', $endDate);
	  $stmt->bindValue(':banner_name', $bannerName);

	  return $stmt->execute();
	}

	public function getBannerStartDate($bannerName) {
		$sql = 'SELECT start_date from banners WHERE banner_name = :bannerName';
		$stmt = $this->pdo->prepare($sql);
		$stmt->bindValue(':banner_name', $bannerName);
		$stmt->execute();

		$startDates = [];
		while ($row = $stmt->fetch(\PDO::FETCH_ASSOC)) {
				$startDates[] = [
						'start_date' => $row['start_date'],
				];
		}
		return $startDates;
	}

	public function getBannerEndDate($bannerName) {
		$sql = 'SELECT start_date from banners WHERE banner_name = :bannerName';
		$stmt = $this->pdo->prepare($sql);
		$stmt->bindValue(':banner_name', $bannerName);
		$stmt->execute();

		$startDates = [];
		while ($row = $stmt->fetch(\PDO::FETCH_ASSOC)) {
				$startDates[] = [
						'start_date' => $row['start_date'],
				];
		}
		return $startDates;
	}


	/**
	 * Registers an allowed IP address for a named banner
	 * @param  String $bannerName Name of the banner
	 * @param  String $ip IP address to register
	 */
	public function registerAllowedIp($bannerName, $ip) {
		$sql = 'INSERT INTO allowed_ips(ip)
						VALUES(:ip)';
		$stmt = $this->pdo->prepare($sql);
		$stmt->bindValue(':ip', $ip);
		$stmt->execute();
		$ip_id = $this->pdo->lastInsertId();

		echo "bannerName ".$bannerName;
		echo "<br>";
		echo "ip ".$ip;
		echo "<br>";

		$sql3 = 'SELECT banner_id from banners WHERE banner_name = :banner_name';
		$stmt3 = $this->pdo->prepare($sql3);
		$stmt3->bindValue(':banner_name', $bannerName);
		$stmt3->execute();
		$row = $stmt3->fetch(\PDO::FETCH_ASSOC);
		$banner_id = $row['banner_id'];

		echo "banner_id ".$banner_id;
		echo "<br>";

		$sql3 = 'SELECT ip_id from allowed_ips WHERE ip = :ip';
		$stmt3 = $this->pdo->prepare($sql3);
		$stmt3->bindValue(':ip', $ip);
		$stmt3->execute();
		$row = $stmt3->fetch(\PDO::FETCH_ASSOC);
		$ip_id = $row['ip_id'];

		echo "ip_id ".$ip_id;
		echo "<br>";

		$sql2 = 'INSERT INTO banner_allowed_ips(banner_id, ip_id)
						VALUES(:banner_id, :ip_id)';
		$stmt2 = $this->pdo->prepare($sql2);
		$stmt2->bindValue(':banner_id', $banner_id);
		$stmt2->bindValue(':ip_id', $ip_id);


		return $stmt2->execute();


	}

	/**
	 * Deregisters an allowed IP address for a named banner
	 * @param  String $bannerName Name of the banner
	 * @param  String $ip IP address to deregister
	 */
	public function deregisterAllowedIp($bannerName, $ip) {
	}

/**
 * Gets allowed IPs
 * @param  String $bannerName Name of the banner
 * @return Array              Array of IPs
 */
	public function getAllowedIps($bannerName) {
		return null;
	}

}

